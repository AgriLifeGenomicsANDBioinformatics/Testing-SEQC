rsem-synthesis-reference-transcripts trinityOut.temp/trinityOut 0 0 0 trinityOut.fasta
Transcript Information File is generated!
Group File is generated!
Extracted Sequences File is generated!

rsem-preref trinityOut.temp/trinityOut.transcripts.fa 1 trinityOut.temp/trinityOut
Refs.makeRefs finished!
Refs.saveRefs finished!
trinityOut.temp/trinityOut.idx.fa is generated!
trinityOut.temp/trinityOut.n2g.idx.fa is generated!

bowtie-build -f trinityOut.temp/trinityOut.n2g.idx.fa trinityOut.temp/trinityOut
Settings:
  Output files: "trinityOut.temp/trinityOut.*.ebwt"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 5 (one in 32)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  trinityOut.temp/trinityOut.n2g.idx.fa
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 34452
Using parameters --bmax 25839 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 25839 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:01
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 19686 (target: 25838)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (25839) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 18646
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 18647
Getting block 2 of 7
  Reserving size (25839) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 18314
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 18315
Getting block 3 of 7
  Reserving size (25839) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 23438
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 23439
Getting block 4 of 7
  Reserving size (25839) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 23809
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 23810
Getting block 5 of 7
  Reserving size (25839) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 18885
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 18886
Getting block 6 of 7
  Reserving size (25839) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 14564
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 14565
Getting block 7 of 7
  Reserving size (25839) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 20146
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 20147
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35534
fchr[G]: 69899
fchr[T]: 103958
fchr[$]: 137808
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4235991 bytes to primary EBWT file: trinityOut.temp/trinityOut.1.ebwt
Wrote 17232 bytes to secondary EBWT file: trinityOut.temp/trinityOut.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 137808
    bwtLen: 137809
    sz: 34452
    bwtSz: 34453
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 4307
    offsSz: 17228
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 308
    numSides: 616
    numLines: 616
    ebwtTotLen: 39424
    ebwtTotSz: 39424
    reverse: 0
Total time for call to driver() for forward index: 00:00:01
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 34452
Using parameters --bmax 25839 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 25839 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 17225.1 (target: 25838)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (25839) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 23406
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 23407
Getting block 2 of 8
  Reserving size (25839) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 19489
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 19490
Getting block 3 of 8
  Reserving size (25839) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 13624
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 13625
Getting block 4 of 8
  Reserving size (25839) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 15048
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 15049
Getting block 5 of 8
  Reserving size (25839) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 22963
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 22964
Getting block 6 of 8
  Reserving size (25839) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 16858
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 16859
Getting block 7 of 8
  Reserving size (25839) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 20729
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 20730
Getting block 8 of 8
  Reserving size (25839) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 5684
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 5685
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35534
fchr[G]: 69899
fchr[T]: 103958
fchr[$]: 137808
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4235991 bytes to primary EBWT file: trinityOut.temp/trinityOut.rev.1.ebwt
Wrote 17232 bytes to secondary EBWT file: trinityOut.temp/trinityOut.rev.2.ebwt
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 137808
    bwtLen: 137809
    sz: 34452
    bwtSz: 34453
    lineRate: 6
    linesPerSide: 1
    offRate: 5
    offMask: 0xffffffe0
    isaRate: -1
    isaMask: 0xffffffff
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 4307
    offsSz: 17228
    isaLen: 0
    isaSz: 0
    lineSz: 64
    sideSz: 64
    sideBwtSz: 56
    sideBwtLen: 224
    numSidePairs: 308
    numSides: 616
    numLines: 616
    ebwtTotLen: 39424
    ebwtTotSz: 39424
    reverse: 0
Total time for backward call to driver() for mirror index: 00:00:01

bowtie -f -n 2 -e 99999999 -l 25 -I 1 -X 1000 -p 1 -a -m 200 -S trinityOut.temp/trinityOut -1 reads_r1.fastq -2 reads_r2.fastq | samtools view -S -b -o trinityOut.temp/trinityOut.bam -
Error: reads file does not look like a FASTA file
libc++abi.dylib: terminating with uncaught exception of type int
[samopen] no @SQ lines in the header.
[sam_read1] missing header? Abort!
"bowtie -f -n 2 -e 99999999 -l 25 -I 1 -X 1000 -p 1 -a -m 200 -S trinityOut.temp/trinityOut -1 reads_r1.fastq -2 reads_r2.fastq | samtools view -S -b -o trinityOut.temp/trinityOut.bam -" failed! Plase check if you provide correct parameters/options for the pipeline!
